// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Quantum.Jobs.Models
{
    /// <summary> Session details. </summary>
    public partial class SessionDetails : ItemDetails
    {
        /// <summary> Initializes a new instance of SessionDetails. </summary>
        /// <param name="id"> The id of the item. </param>
        /// <param name="name"> The name of the item. It is not required for the name to be unique and it&apos;s only used for display purposes. </param>
        /// <param name="providerId"> The unique identifier for the provider. </param>
        /// <param name="target"> The target identifier to run the job. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="name"/>, <paramref name="providerId"/> or <paramref name="target"/> is null. </exception>
        public SessionDetails(string id, string name, string providerId, string target) : base(id, name, providerId, target)
        {
            if (id == null)
            {
                throw new ArgumentNullException(nameof(id));
            }
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (providerId == null)
            {
                throw new ArgumentNullException(nameof(providerId));
            }
            if (target == null)
            {
                throw new ArgumentNullException(nameof(target));
            }

            ItemType = ItemType.Session;
        }

        /// <summary> Initializes a new instance of SessionDetails. </summary>
        /// <param name="id"> The id of the item. </param>
        /// <param name="name"> The name of the item. It is not required for the name to be unique and it&apos;s only used for display purposes. </param>
        /// <param name="providerId"> The unique identifier for the provider. </param>
        /// <param name="target"> The target identifier to run the job. </param>
        /// <param name="itemType"> The type of item. </param>
        /// <param name="createdOn"> The creation time of the item. </param>
        /// <param name="beginExecutionOn"> The time when the item began execution. </param>
        /// <param name="endExecutionOn"> The time when the item finished execution. </param>
        /// <param name="costEstimate"> The job cost billed by the provider. The final cost on your bill might be slightly different due to added taxes and currency conversion rates. </param>
        /// <param name="errorData"> An error response from Azure. </param>
        /// <param name="jobFailurePolicy"> Policy controlling the behavior of the Session when a job in the session fails. </param>
        /// <param name="status"> The status of the session. </param>
        /// <param name="jobCount"> The number of jobs in the session. </param>
        internal SessionDetails(string id, string name, string providerId, string target, ItemType itemType, DateTimeOffset? createdOn, DateTimeOffset? beginExecutionOn, DateTimeOffset? endExecutionOn, CostEstimate costEstimate, ErrorData errorData, SessionJobFailurePolicy? jobFailurePolicy, SessionStatus? status, long? jobCount) : base(id, name, providerId, target, itemType, createdOn, beginExecutionOn, endExecutionOn, costEstimate, errorData)
        {
            JobFailurePolicy = jobFailurePolicy;
            Status = status;
            JobCount = jobCount;
            ItemType = itemType;
        }

        /// <summary> Policy controlling the behavior of the Session when a job in the session fails. </summary>
        public SessionJobFailurePolicy? JobFailurePolicy { get; set; }
        /// <summary> The status of the session. </summary>
        public SessionStatus? Status { get; }
        /// <summary> The number of jobs in the session. </summary>
        public long? JobCount { get; }
    }
}
